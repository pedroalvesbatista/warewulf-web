"use strict";(self.webpackChunkwarewulf=self.webpackChunkwarewulf||[]).push([[278],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,d=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),s=c(n),f=i,m=s["".concat(d,".").concat(f)]||s[f]||p[f]||l;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=s;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},2827:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return u},default:function(){return s}});var r=n(7462),i=n(3366),l=(n(7294),n(3905)),o=["components"],a={id:"profile",title:"wwctl profile"},d=void 0,c={unversionedId:"wwctl/profile",id:"wwctl/profile",isDocsHomePage:!1,title:"wwctl profile",description:"Management of node profile settings",source:"@site/docs/wwctl/profile.md",sourceDirName:"wwctl",slug:"/wwctl/profile",permalink:"/docs/wwctl/profile",editUrl:"https://github.com/hpcng/warewulf-web/edit/main/docs/wwctl/profile.md",version:"current",frontMatter:{id:"profile",title:"wwctl profile"},sidebar:"someSidebar",previous:{title:"wwctl power",permalink:"/docs/wwctl/power"},next:{title:"wwctl ready",permalink:"/docs/wwctl/ready"}},u=[{value:"add",id:"add",children:[]},{value:"delete",id:"delete",children:[]},{value:"list",id:"list",children:[]},{value:"set",id:"set",children:[{value:"--comment",id:"--comment",children:[]},{value:"-C, --container",id:"-c---container",children:[]},{value:"-K, --kernel",id:"-k---kernel",children:[]},{value:"-A, --kernelargs",id:"-a---kernelargs",children:[]},{value:"-c, --cluster",id:"-c---cluster",children:[]},{value:"-P, --ipxe",id:"-p---ipxe",children:[]},{value:"-i, --init",id:"-i---init",children:[]},{value:"--root",id:"--root",children:[]},{value:"-R, --runtime",id:"-r---runtime",children:[]},{value:"-S, --system",id:"-s---system",children:[]},{value:"--ipminetmask",id:"--ipminetmask",children:[]},{value:"--ipmigateway",id:"--ipmigateway",children:[]},{value:"--ipmiuser",id:"--ipmiuser",children:[]},{value:"--ipmipass",id:"--ipmipass",children:[]},{value:"-N, --netdev",id:"-n---netdev",children:[]},{value:"-I, --ipaddr",id:"-i---ipaddr",children:[]},{value:"-M, --netmask",id:"-m---netmask",children:[]},{value:"-G, --gateway",id:"-g---gateway",children:[]},{value:"-H, --hwaddr",id:"-h---hwaddr",children:[]},{value:"--netdel",id:"--netdel",children:[]},{value:"--netdefault",id:"--netdefault",children:[]},{value:"-a, --all",id:"-a---all",children:[]},{value:"-f, --force",id:"-f---force",children:[]}]}],p={toc:u};function s(e){var t=e.components,n=(0,i.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Management of node profile settings"),(0,l.kt)("h2",{id:"add"},"add"),(0,l.kt)("p",null,"This command will add a new node profile."),(0,l.kt)("h2",{id:"delete"},"delete"),(0,l.kt)("p",null,"This command will delete a node profile."),(0,l.kt)("h2",{id:"list"},"list"),(0,l.kt)("p",null,"This command will list and show the profile configurations."),(0,l.kt)("h2",{id:"set"},"set"),(0,l.kt)("p",null,"This command will allow you to set configuration properties for node profiles."),(0,l.kt)("h3",{id:"--comment"},"--comment"),(0,l.kt)("p",null,"Set a comment for this node"),(0,l.kt)("h3",{id:"-c---container"},"-C, --container"),(0,l.kt)("p",null,"Set the container (VNFS) for this node"),(0,l.kt)("h3",{id:"-k---kernel"},"-K, --kernel"),(0,l.kt)("p",null,"Set Kernel version for nodes"),(0,l.kt)("h3",{id:"-a---kernelargs"},"-A, --kernelargs"),(0,l.kt)("p",null,"Set Kernel argument for nodes"),(0,l.kt)("h3",{id:"-c---cluster"},"-c, --cluster"),(0,l.kt)("p",null,"Set the node's cluster group"),(0,l.kt)("h3",{id:"-p---ipxe"},"-P, --ipxe"),(0,l.kt)("p",null,"Set the node's iPXE template name"),(0,l.kt)("h3",{id:"-i---init"},"-i, --init"),(0,l.kt)("p",null,"Define the init process to boot the container"),(0,l.kt)("h3",{id:"--root"},"--root"),(0,l.kt)("p",null,"Define the rootfs"),(0,l.kt)("h3",{id:"-r---runtime"},"-R, --runtime"),(0,l.kt)("p",null,"Set the node's runtime overlay"),(0,l.kt)("h3",{id:"-s---system"},"-S, --system"),(0,l.kt)("p",null,"Set the node's system overlay"),(0,l.kt)("h3",{id:"--ipminetmask"},"--ipminetmask"),(0,l.kt)("p",null,"Set the node's IPMI netmask"),(0,l.kt)("h3",{id:"--ipmigateway"},"--ipmigateway"),(0,l.kt)("p",null,"Set the node's IPMI gateway"),(0,l.kt)("h3",{id:"--ipmiuser"},"--ipmiuser"),(0,l.kt)("p",null,"Set the node's IPMI username"),(0,l.kt)("h3",{id:"--ipmipass"},"--ipmipass"),(0,l.kt)("p",null,"Set the node's IPMI password"),(0,l.kt)("h3",{id:"-n---netdev"},"-N, --netdev"),(0,l.kt)("p",null,"Define the network device to configure"),(0,l.kt)("h3",{id:"-i---ipaddr"},"-I, --ipaddr"),(0,l.kt)("p",null,"Set the node's network device IP address"),(0,l.kt)("h3",{id:"-m---netmask"},"-M, --netmask"),(0,l.kt)("p",null,"Set the node's network device netmask"),(0,l.kt)("h3",{id:"-g---gateway"},"-G, --gateway"),(0,l.kt)("p",null,"Set the node's network device gateway"),(0,l.kt)("h3",{id:"-h---hwaddr"},"-H, --hwaddr"),(0,l.kt)("p",null,"Set the node's network device HW address"),(0,l.kt)("h3",{id:"--netdel"},"--netdel"),(0,l.kt)("p",null,"Delete the node's network device"),(0,l.kt)("h3",{id:"--netdefault"},"--netdefault"),(0,l.kt)("p",null,"Set this network to be default"),(0,l.kt)("h3",{id:"-a---all"},"-a, --all"),(0,l.kt)("p",null,"Set all profiles"),(0,l.kt)("h3",{id:"-f---force"},"-f, --force"),(0,l.kt)("p",null,"Force configuration (even on error)"))}s.isMDXComponent=!0}}]);