"use strict";(self.webpackChunkwarewulf=self.webpackChunkwarewulf||[]).push([[3877],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var l=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,i=function(e,t){if(null==e)return{};var n,l,i={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=l.createContext({}),c=function(e){var t=l.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},u=function(e){var t=c(e.components);return l.createElement(a.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,a=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),h=i,k=p["".concat(a,".").concat(h)]||p[h]||s[h]||r;return n?l.createElement(k,d(d({ref:t},u),{},{components:n})):l.createElement(k,d({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,d=new Array(r);d[0]=p;var o={};for(var a in t)hasOwnProperty.call(t,a)&&(o[a]=t[a]);o.originalType=e,o.mdxType="string"==typeof e?e:i,d[1]=o;for(var c=2;c<r;c++)d[c]=n[c];return l.createElement.apply(null,d)}return l.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2299:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return a},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var l=n(7462),i=n(3366),r=(n(7294),n(3905)),d=["components"],o={id:"node",title:"wwctl node"},a=void 0,c={unversionedId:"wwctl/node",id:"wwctl/node",isDocsHomePage:!1,title:"wwctl node",description:"Management of node settings",source:"@site/docs/wwctl/node.md",sourceDirName:"wwctl",slug:"/wwctl/node",permalink:"/docs/wwctl/node",editUrl:"https://github.com/hpcng/warewulf-web/edit/main/docs/wwctl/node.md",tags:[],version:"current",frontMatter:{id:"node",title:"wwctl node"},sidebar:"someSidebar",previous:{title:"wwctl kernel",permalink:"/docs/wwctl/kernel"},next:{title:"wwctl overlay",permalink:"/docs/wwctl/overlay"}},u=[{value:"add",id:"add",children:[{value:"-g, --group",id:"-g---group",children:[]},{value:"-c, --controller",id:"-c---controller",children:[]},{value:"-N, --netdevDefine",id:"-n---netdevdefine",children:[]},{value:"-I, --ipaddrSet",id:"-i---ipaddrset",children:[]},{value:"-M, --netmaskSet",id:"-m---netmaskset",children:[]},{value:"-G, --gatewaySet",id:"-g---gatewayset",children:[]},{value:"-H, --hwaddrSet",id:"-h---hwaddrset",children:[]},{value:"--discoverable",id:"--discoverable",children:[]}]},{value:"console",id:"console",children:[]},{value:"delete",id:"delete",children:[{value:"-f, --force",id:"-f---force",children:[]},{value:"-g, --group",id:"-g---group-1",children:[]},{value:"-c, --controller",id:"-c---controller-1",children:[]}]},{value:"list",id:"list",children:[{value:"-n, --net",id:"-n---net",children:[]},{value:"-i, --ipmi",id:"-i---ipmi",children:[]},{value:"-a, --all",id:"-a---all",children:[]},{value:"-l, --long",id:"-l---long",children:[]}]},{value:"sensors",id:"sensors",children:[{value:"-F, --full",id:"-f---full",children:[]}]},{value:"set",id:"set",children:[{value:"--comment",id:"--comment",children:[]},{value:"-C, --container",id:"-c---container",children:[]},{value:"-K, --kernel",id:"-k---kernel",children:[]},{value:"-A, --kernelargs",id:"-a---kernelargs",children:[]},{value:"-c, --cluster",id:"-c---cluster",children:[]},{value:"-P, --ipxe",id:"-p---ipxe",children:[]},{value:"-i, --init",id:"-i---init",children:[]},{value:"--root",id:"--root",children:[]},{value:"-R, --runtime",id:"-r---runtime",children:[]},{value:"-S, --system",id:"-s---system",children:[]},{value:"--ipmi",id:"--ipmi",children:[]},{value:"--ipminetmask",id:"--ipminetmask",children:[]},{value:"--ipmigateway",id:"--ipmigateway",children:[]},{value:"--ipmiuser",id:"--ipmiuser",children:[]},{value:"--ipmipass",id:"--ipmipass",children:[]},{value:"-p, --addprofile",id:"-p---addprofile",children:[]},{value:"-r, --delprofile",id:"-r---delprofile",children:[]},{value:"-N, --netdev",id:"-n---netdev",children:[]},{value:"-I, --ipaddr",id:"-i---ipaddr",children:[]},{value:"-M, --netmask",id:"-m---netmask",children:[]},{value:"-G, --gateway",id:"-g---gateway",children:[]},{value:"-H, --hwaddr",id:"-h---hwaddr",children:[]},{value:"--netdel",id:"--netdel",children:[]},{value:"--netdefault",id:"--netdefault",children:[]},{value:"-a, --all",id:"-a---all-1",children:[]},{value:"-y, --yes",id:"-y---yes",children:[]},{value:"-f, --force",id:"-f---force-1",children:[]},{value:"--discoverable",id:"--discoverable-1",children:[]},{value:"--undiscoverable",id:"--undiscoverable",children:[]}]}],s={toc:u};function p(e){var t=e.components,n=(0,i.Z)(e,d);return(0,r.kt)("wrapper",(0,l.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Management of node settings"),(0,r.kt)("h2",{id:"add"},"add"),(0,r.kt)("p",null,"This command will add a new node to Warewulf."),(0,r.kt)("h3",{id:"-g---group"},"-g, --group"),(0,r.kt)("p",null,"Group to add nodes to"),(0,r.kt)("h3",{id:"-c---controller"},"-c, --controller"),(0,r.kt)("p",null,"Controller to add nodes to"),(0,r.kt)("h3",{id:"-n---netdevdefine"},"-N, --netdevDefine"),(0,r.kt)("p",null,"the network device to configure"),(0,r.kt)("h3",{id:"-i---ipaddrset"},"-I, --ipaddrSet"),(0,r.kt)("p",null,"the node's network device IP address"),(0,r.kt)("h3",{id:"-m---netmaskset"},"-M, --netmaskSet"),(0,r.kt)("p",null,"the node's network device netmask"),(0,r.kt)("h3",{id:"-g---gatewayset"},"-G, --gatewaySet"),(0,r.kt)("p",null,"the node's network device gateway"),(0,r.kt)("h3",{id:"-h---hwaddrset"},"-H, --hwaddrSet"),(0,r.kt)("p",null,"the node's network device HW address"),(0,r.kt)("h3",{id:"--discoverable"},"--discoverable"),(0,r.kt)("p",null,"Make this node discoverable"),(0,r.kt)("h2",{id:"console"},"console"),(0,r.kt)("p",null,"Start IPMI console for a singe node."),(0,r.kt)("h2",{id:"delete"},"delete"),(0,r.kt)("p",null,"This command will remove a node from the Warewulf node configuration."),(0,r.kt)("h3",{id:"-f---force"},"-f, --force"),(0,r.kt)("p",null,"Force node delete"),(0,r.kt)("h3",{id:"-g---group-1"},"-g, --group"),(0,r.kt)("p",null,"Set group to delete nodes from"),(0,r.kt)("h3",{id:"-c---controller-1"},"-c, --controller"),(0,r.kt)("p",null,"Controller to add nodes to"),(0,r.kt)("h2",{id:"list"},"list"),(0,r.kt)("p",null,"This command will show you configured nodes."),(0,r.kt)("h3",{id:"-n---net"},"-n, --net"),(0,r.kt)("p",null,"Show node network configurations"),(0,r.kt)("h3",{id:"-i---ipmi"},"-i, --ipmi"),(0,r.kt)("p",null,"Show node IPMI configurations"),(0,r.kt)("h3",{id:"-a---all"},"-a, --all"),(0,r.kt)("p",null,"Show all node configurations"),(0,r.kt)("h3",{id:"-l---long"},"-l, --long"),(0,r.kt)("p",null,"Show long or wide format"),(0,r.kt)("h2",{id:"sensors"},"sensors"),(0,r.kt)("p",null,"Show IPMI sensors for a single node."),(0,r.kt)("h3",{id:"-f---full"},"-F, --full"),(0,r.kt)("p",null,"show detailed output"),(0,r.kt)("h2",{id:"set"},"set"),(0,r.kt)("p",null,"This command will allow you to set configuration properties for nodes."),(0,r.kt)("h3",{id:"--comment"},"--comment"),(0,r.kt)("p",null,"Set a comment for this node"),(0,r.kt)("h3",{id:"-c---container"},"-C, --container"),(0,r.kt)("p",null,"Set the container (VNFS) for this node"),(0,r.kt)("h3",{id:"-k---kernel"},"-K, --kernel"),(0,r.kt)("p",null,"Set Kernel version for nodes"),(0,r.kt)("h3",{id:"-a---kernelargs"},"-A, --kernelargs"),(0,r.kt)("p",null,"Set Kernel argument for nodes"),(0,r.kt)("h3",{id:"-c---cluster"},"-c, --cluster"),(0,r.kt)("p",null,"Set the node's cluster group"),(0,r.kt)("h3",{id:"-p---ipxe"},"-P, --ipxe"),(0,r.kt)("p",null,"Set the node's iPXE template name"),(0,r.kt)("h3",{id:"-i---init"},"-i, --init"),(0,r.kt)("p",null,"Define the init process to boot the container"),(0,r.kt)("h3",{id:"--root"},"--root"),(0,r.kt)("p",null,"Define the rootfs"),(0,r.kt)("h3",{id:"-r---runtime"},"-R, --runtime"),(0,r.kt)("p",null,"Set the node's runtime overlay"),(0,r.kt)("h3",{id:"-s---system"},"-S, --system"),(0,r.kt)("p",null,"Set the node's system overlay"),(0,r.kt)("h3",{id:"--ipmi"},"--ipmi"),(0,r.kt)("p",null,"Set the node's IPMI IP address"),(0,r.kt)("h3",{id:"--ipminetmask"},"--ipminetmask"),(0,r.kt)("p",null,"Set the node's IPMI netmask"),(0,r.kt)("h3",{id:"--ipmigateway"},"--ipmigateway"),(0,r.kt)("p",null,"Set the node's IPMI gateway"),(0,r.kt)("h3",{id:"--ipmiuser"},"--ipmiuser"),(0,r.kt)("p",null,"Set the node's IPMI username"),(0,r.kt)("h3",{id:"--ipmipass"},"--ipmipass"),(0,r.kt)("p",null,"Set the node's IPMI password"),(0,r.kt)("h3",{id:"-p---addprofile"},"-p, --addprofile"),(0,r.kt)("p",null,"Add Profile(s) to node"),(0,r.kt)("h3",{id:"-r---delprofile"},"-r, --delprofile"),(0,r.kt)("p",null,"Remove Profile(s) to node"),(0,r.kt)("h3",{id:"-n---netdev"},"-N, --netdev"),(0,r.kt)("p",null,"Define the network device to configure"),(0,r.kt)("h3",{id:"-i---ipaddr"},"-I, --ipaddr"),(0,r.kt)("p",null,"Set the node's network device IP address"),(0,r.kt)("h3",{id:"-m---netmask"},"-M, --netmask"),(0,r.kt)("p",null,"Set the node's network device netmask"),(0,r.kt)("h3",{id:"-g---gateway"},"-G, --gateway"),(0,r.kt)("p",null,"Set the node's network device gateway"),(0,r.kt)("h3",{id:"-h---hwaddr"},"-H, --hwaddr"),(0,r.kt)("p",null,"Set the node's network device HW address"),(0,r.kt)("h3",{id:"--netdel"},"--netdel"),(0,r.kt)("p",null,"Delete the node's network device"),(0,r.kt)("h3",{id:"--netdefault"},"--netdefault"),(0,r.kt)("p",null,"Set this network to be default"),(0,r.kt)("h3",{id:"-a---all-1"},"-a, --all"),(0,r.kt)("p",null,"Set all nodes"),(0,r.kt)("h3",{id:"-y---yes"},"-y, --yes"),(0,r.kt)("p",null,"Set 'yes' to all questions asked"),(0,r.kt)("h3",{id:"-f---force-1"},"-f, --force"),(0,r.kt)("p",null,"Force configuration (even on error)"),(0,r.kt)("h3",{id:"--discoverable-1"},"--discoverable"),(0,r.kt)("p",null,"Make this node discoverable"),(0,r.kt)("h3",{id:"--undiscoverable"},"--undiscoverable"),(0,r.kt)("p",null,"Remove the discoverable flag"))}p.isMDXComponent=!0}}]);