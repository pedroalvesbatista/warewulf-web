"use strict";(self.webpackChunkwarewulf=self.webpackChunkwarewulf||[]).push([[8845],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=u(t),p=o,f=m["".concat(i,".").concat(p)]||m[p]||c[p]||l;return t?r.createElement(f,a(a({ref:n},d),{},{components:t})):r.createElement(f,a({ref:n},d))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=m;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<l;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5218:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return d},default:function(){return m}});var r=t(7462),o=t(3366),l=(t(7294),t(3905)),a=["components"],s={id:"development-environment-kvm",title:"Development Environment (KVM)"},i=void 0,u={unversionedId:"contributing/development-environment-kvm",id:"contributing/development-environment-kvm",isDocsHomePage:!1,title:"Development Environment (KVM)",description:"1. Create CentOS 7 development virtual machine under KVM",source:"@site/docs/contributing/development-environment-kvm.md",sourceDirName:"contributing",slug:"/contributing/development-environment-kvm",permalink:"/docs/contributing/development-environment-kvm",editUrl:"https://github.com/hpcng/warewulf-web/edit/main/docs/contributing/development-environment-kvm.md",tags:[],version:"current",frontMatter:{id:"development-environment-kvm",title:"Development Environment (KVM)"},sidebar:"someSidebar",previous:{title:"Documentation",permalink:"/docs/contributing/documentation"},next:{title:"Development Environment (VirtualBox)",permalink:"/docs/contributing/development-environment-vbox"}},d=[],c={toc:d};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Create CentOS 7 development virtual machine under KVM")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# KVM is running on server called master1 which is not my desktop\nssh -X master1\n\n# On master1 server\nwget -P /global/downloads/centos http://mirror.mobap.edu/centos/7.8.2003/isos/x86_64/CentOS-7-x86_64-Everything-2003.iso\n\nqemu-img create -o preallocation=metadata -f qcow2 /global/images/centos-7.qcow2 32G\n\n# install wwdev Centos 7 development VM\nsudo virt-install --virt-type kvm --name centos7-wwdev --ram 8192 \\\n   --disk /global/images/centos-7.qcow2,format=qcow2 \\\n   --network network=default \\\n   --graphics vnc,listen=0.0.0.0 --noautoconsole \\\n   --os-type=linux --os-variant=rhel7.0 \\\n   --location=/global/downloads/centos/CentOS-7-x86_64-Everything-2003.iso\n\n# Complete installation using virt-manager\n\n# To start virt-manager on non-local server\nssh -X master1\n\nsudo -E virt-manager\n\n# Login to VM and install @development group and go language\nssh root@wwdev\n\n# Disable selinux by modifying /etc/sysconfig/selinux\nvi /etc/sysconfig/selinux\n\n    SELINUX=disabled\n\n# disable firewall\nsystemctl stop firewalld\nsystemctl disable firewalld\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Turn off default network dhcp on server master1")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# shutdown all VMs\nsudo virsh net-destroy default\n\nsudo virsh net-edit default\n\n    # remove dhcp lines from XML\n\nsudo virsh net-start default\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Build and install warewulf on wwdev")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ssh wwdev\n\n# Fedora prerequisites\nsudo dnf -y install tftp-server tftp\nsudo dnf -y install dhcp\nsudo dnf -y install ipmitool\nsudo dnf install singularity\nsudo dnf install gpgme-devel\nsudo dnf install libassuan.x86_64 libassuan-devel.x86_64\nsudo dnf golang\nsudo dnf nfs-utils\n\n# Centos prerequisites\nsudo yum -y install tftp-server tftp\nsudo yum -y install dhcp\nsudo yum -y install ipmitool\nsudo yum install http://repo.ctrliq.com/packages/rhel7/ctrl-release.rpm\nsudo yum install singularityplus\nsudo yum install gpgme-devel\nsudo yum install libassuan.x86_64 libassuan-devel.x86_64\nsudo yum install https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.7-1.x86_64.rpm\nsudo yum install golang \nsudo yum install nfs-utils\n\n# Install Warewulf and dependencies\ngit clone https://github.com/hpcng/warewulf.git\ncd warewulf\n\nmake all\nsudo make install\n\n# Configure the controller\nEdit the file /etc/warewulf/warewulf.conf and ensure that you've ser the approprite configuration parameters\n\n# Configure system service automatically\nsudo wwctl configure dhcp # Create the default dhcpd.conf file and start/enable service\nsudo wwctl configure tftp # Install the base tftp/PXE boot files and start/enable service\nsudo wwctl configure nfs  # Configure the exports and create an fstab in the default system overlay\nsudo wwctl configure ssh  # Build the basic ssh keys to be included by the default system overlay\n\n# Pull and build the VNFS container and kernel\nsudo wwctl container import docker://warewulf/centos-8 centos-8 --setdefault\nsudo wwctl kernel import build $(uname -r) --setdefault\n\n# Set up the default node profile\nsudo wwctl profile set default -K $(uname -r) -C centos-7\nsudo wwctl profile set default --netdev eth0 -M WW_server_subnet_mask -G WW_server_ip\nsudo wwctl profile list\n\n# Add a node and build node specific overlays\nsudo wwctl node add n0000.cluster --netdev eth0 -I n0000_ip --discoverable\nsudo wwctl node list -a n0000\n\n# Review Warewulf overlays\nsudo wwctl overlay list -l\nsudo wwctl overlay list -ls\nsudo wwctl overlay edit default /etc/hello_world.ww\nsudo wwctl overlay build -a\n\n# Start the Warewulf daemon\nsudo wwctl ready\nsudo wwctl server start\nsudo wwctl server status\n")),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"Boot your node and watch the console and the output of the Warewulfd process")))}m.isMDXComponent=!0}}]);